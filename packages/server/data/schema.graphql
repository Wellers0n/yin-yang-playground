schema {
  query: QueryType
  mutation: MutationType
}

"""Exposes a URL that specifies the behaviour of this scalar."""
directive @specifiedBy(
  """The URL that specifies the behaviour of this scalar."""
  url: String!
) on SCALAR

type MutationType {
  UserLoginMutation(input: UserLoginInput!): UserLoginPayload
  UserRegisterMutation(input: userRegisterInput!): userRegisterPayload
  UserDeleteMutation(input: UserDeleteInput!): UserDeletePayload
  UserUpdateMutation(input: UserUpdateInput!): UserUpdatePayload
}

"""Get users[], user and me"""
type QueryType {
  me: Users
  user(id: String): Users
  users(skip: Int, limit: Int): [Users]
}

input UserDeleteInput {
  id: String!
  clientMutationId: String
}

type UserDeletePayload {
  users: [Users]
  message: String
  clientMutationId: String
}

input UserLoginInput {
  email: String!
  password: String!
  clientMutationId: String
}

type UserLoginPayload {
  token: String
  message: String
  clientMutationId: String
}

input userRegisterInput {
  name: String!
  email: String!
  password: String!
  description: String!
  clientMutationId: String
}

type userRegisterPayload {
  message: String
  error: Boolean
  token: String
  clientMutationId: String
}

type Users {
  """The ID of an object"""
  id: ID!
  _id: ID
  name: String
  email: String
  password: String
  description: String
}

input UserUpdateInput {
  id: String!
  name: String!
  description: String!
  email: String!
  clientMutationId: String
}

type UserUpdatePayload {
  users: [Users]
  message: String
  clientMutationId: String
}
